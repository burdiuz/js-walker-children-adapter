{"version":3,"file":"index.min.js","sources":["source/index.js","source/umd.js"],"sourcesContent":["export const defaultGetNodeName = (node) => node.name;\nexport const defaultGetNodeChildren = (node) => node.children;\n\nconst createAdapter = (\n  getNodeName = defaultGetNodeName,\n  getNodeChildren = defaultGetNodeChildren,\n) => {\n  const adapter = {\n    validateRoot: (item) => item,\n\n    // list methods\n    isList: (item) => item instanceof Array,\n    toList: (item) => (adapter.isList(item) ? item : [item]),\n    getLength: (item) => adapter.toList(item).length,\n    getNodeAt: (item, index = 0) => adapter.toList(item)[index],\n\n    // node methods\n    isNode: (item) => item instanceof Object && !adapter.isList(item),\n    toNode: (item) => (adapter.isList(item) ? item[0] : item),\n    getName: (item) => {\n      const node = adapter.toNode(item);\n\n      return node ? getNodeName(node) : '';\n    },\n    hasChild: (item, name) => !!adapter.getChildrenByName(item, name).length,\n    getChildren: (item) => {\n      const node = adapter.toNode(item);\n      return (node && getNodeChildren(node)) || [];\n    },\n    getChildrenByName: (item, name) =>\n      adapter\n        .getChildren(item)\n        .filter((child) => adapter.getName(child) === name),\n    getChildAt: (item, index = 0) => adapter.toNode(item).children[index],\n    getNodeParent: () => {\n      throw new Error('adapter.getNodeParent() is not implemented.');\n    },\n    getNodeRoot: () => {\n      throw new Error('adapter.getNodeRootÀù() is not implemented.');\n    },\n  };\n\n  return adapter;\n};\n\nexport default createAdapter;\n","import adapter from './index';\n\nexport const {\n  validateRoot,\n  isList,\n  toList,\n  getLength,\n  getNodeAt,\n  isNode,\n  toNode,\n  getName,\n  hasChild,\n  getChildren,\n  getChildrenByName,\n  getChildAt,\n  getNodeParent,\n  getNodeRoot,\n} = adapter;\n\nexport default adapter;\n"],"names":["createAdapter","getNodeName","node","name","getNodeChildren","children","adapter","item","Array","isList","toList","length","index","Object","toNode","getChildrenByName","getChildren","filter","child","getName","Error","validateRoot","getLength","getNodeAt","isNode","hasChild","getChildAt","getNodeParent","getNodeRoot"],"mappings":"kMAAO,MAGDA,EAAgB,CACpBC,EAJiCC,CAAAA,GAASA,EAAKC,MAK/CC,EAJqCF,CAAAA,GAASA,EAAKG,mBAM7CC,gBACWC,GAASA,SAGfA,GAASA,aAAgBC,aACzBD,GAAUD,EAAQG,OAAOF,GAAQA,GAAQA,aACtCA,GAASD,EAAQI,OAAOH,GAAMI,iBAC/B,CAACJ,EAAMK,EAAQ,IAAMN,EAAQI,OAAOH,GAAMK,UAG5CL,GAASA,aAAgBM,SAAWP,EAAQG,OAAOF,UACnDA,GAAUD,EAAQG,OAAOF,GAAQA,EAAK,GAAKA,UAC1CA,UACFL,EAAOI,EAAQQ,OAAOP,UAErBL,EAAOD,EAAYC,GAAQ,aAE1B,CAACK,EAAMJ,MAAWG,EAAQS,kBAAkBR,EAAMJ,GAAMQ,mBACpDJ,UACNL,EAAOI,EAAQQ,OAAOP,UACpBL,GAAQE,EAAgBF,0BAEf,CAACK,EAAMJ,IACxBG,EACGU,YAAYT,GACZU,OAAQC,GAAUZ,EAAQa,QAAQD,KAAWf,cACtC,CAACI,EAAMK,EAAQ,IAAMN,EAAQQ,OAAOP,GAAMF,SAASO,iBAChD,WACP,IAAIQ,MAAM,4DAEL,WACL,IAAIA,MAAM,uDAIbd,ICxCIe,eAAAZ,SAAAC,SAAAY,YAAAC,YAAAC,SAAAV,SAAAK,UAAAM,WAAAT,cAAAD,oBAAAW,aAAAC,gBAAAC,eAeTtB"}