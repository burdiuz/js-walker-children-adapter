{"version":3,"file":"index.js","sources":["source/index.js"],"sourcesContent":["export const defaultGetNodeName = (node) => node.name;\nexport const defaultGetNodeChildren = (node) => node.children;\n\nconst createAdapter = (\n  getNodeName = defaultGetNodeName,\n  getNodeChildren = defaultGetNodeChildren,\n) => {\n  const adapter = {\n    validateRoot: (item) => item,\n\n    // list methods\n    isList: (item) => item instanceof Array,\n    toList: (item) => (adapter.isList(item) ? item : [item]),\n    getLength: (item) => adapter.toList(item).length,\n    getNodeAt: (item, index = 0) => adapter.toList(item)[index],\n\n    // node methods\n    isNode: (item) => item instanceof Object && !adapter.isList(item),\n    toNode: (item) => (adapter.isList(item) ? item[0] : item),\n    getName: (item) => {\n      const node = adapter.toNode(item);\n\n      return node ? getNodeName(node) : '';\n    },\n    hasChild: (item, name) => !!adapter.getChildrenByName(item, name).length,\n    getChildren: (item) => {\n      const node = adapter.toNode(item);\n      return (node && getNodeChildren(node)) || [];\n    },\n    getChildrenByName: (item, name) =>\n      adapter\n        .getChildren(item)\n        .filter((child) => adapter.getName(child) === name),\n    getChildAt: (item, index = 0) => adapter.toNode(item).children[index],\n    getNodeParent: () => {\n      throw new Error('adapter.getNodeParent() is not implemented.');\n    },\n    getNodeRoot: () => {\n      throw new Error('adapter.getNodeRootÀù() is not implemented.');\n    },\n  };\n};\n\nexport default createAdapter;\n"],"names":["defaultGetNodeName","node","name","defaultGetNodeChildren","children","createAdapter","getNodeName","getNodeChildren"],"mappings":";;;;MAAaA,qBAAsBC,IAAD,IAAUA,KAAKC,IAA1C;AACP,MAAaC,yBAA0BF,IAAD,IAAUA,KAAKG,QAA9C;;AAEP,MAAMC,gBAAgB,CACpBC,cAAcN,kBADM,EAEpBO,kBAAkBJ,sBAFE,KAGjB;AACH,AAkCD,CAtCD;;;;;;"}